{"version":3,"sources":["useAxios.js","App.js","serviceWorker.js","index.js"],"names":["useAxios","opts","axiosInstance","defaultAxios","useState","loading","error","data","state","setState","trigger","setTrigger","refetch","Date","useEffect","then","catch","content","id","tab","useFadeIn","duration","delay","element","useRef","current","style","opacity","transition","ref","App","item","setItem","name","initialValue","validator","value","setValue","onChange","event","target","willUpdate","console","log","useInput","length","i","o","currentIndex","setCurrentIndex","Array","isArray","currentItem","changeItem","useTabs","titleUpDater","title","setTitle","document","querySelector","innerText","useTitle","setTimeout","changeElement","onClick","addEventListener","removeEventListener","useClick","confirmDelete","m","callback","cancel","confirmAction","window","confirm","useConfirm","listener","preventDefault","returnValue","enablePrevent","disablePrevent","usePreventLeave","onBefore","handle","clientY","useBeforLeave","titleFadeIn","descriptionFadeIn","checkOnLine","netWorkOnChange","navigator","onLine","status","setStatus","handler","useNetwork","y","x","onScroll","scrollY","scrollX","useScroll","triggerFull","requestFullscreen","exitFull","exitFullscreen","useFullScreen","isFull","triggerNotifi","options","Notification","permission","requestPermission","useNotification","body","url","className","height","placeholder","map","section","index","position","color","display","src","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d86b9fea.chunk.js","sourcesContent":["import defaultAxios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst useAxios = (opts, axiosInstance = defaultAxios) =>{\r\n    const [state,setState]= useState({\r\n        loading: true,\r\n        error : null,\r\n        data: null\r\n    })\r\n    const [trigger,setTrigger] = useState(0);\r\n    const refetch = () =>{\r\n        setState({\r\n            ...state,\r\n            loading:true\r\n        })\r\n        setTrigger(new Date())\r\n    }\r\n    useEffect(()=>{\r\n        axiosInstance(opts).then(data => {\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                data\r\n            })\r\n        }).catch(error =>{\r\n            setState({...state, loading: false, error})\r\n        })\r\n    },[trigger]) \r\n    // if(!opts.url){\r\n    //     return ;\r\n    // }else{\r\n        \r\n    // }\r\n    \r\n    return {...state,refetch};\r\n};\r\n\r\nexport default useAxios;","import React, {useState,useEffect,useRef, useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport useAxios from './useAxios';\n\nconst content = [\n  { id:1,\n    tab : \"section 1\",\n    content : \"I'm the content of the section 1\"\n  },\n  {id:2,\n    tab : \"section 2\",\n    content : \"I'm the content of the section 2\"\n  },\n  {id:3,\n    tab : \"section 3\",\n    content : \"I'm the content of the section 3\"\n  }\n]\n\n\nconst useInput = (initialValue, validator) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = event =>{\n    \n    const {\n      target : {value}\n    } = event;\n    let willUpdate = true;\n    if(typeof validator === \"function\"){\n      willUpdate = validator(value);\n    }\n    if(willUpdate){\n      setValue(value);\n      console.log(value)\n    }\n    \n  }\n  return {value,onChange};\n};\nconst useTabs = (i, o) =>{\n  const [currentIndex, setCurrentIndex] = useState(i);\n  if(!o || !Array.isArray(o)){\n    return;\n  }\n  \n  return {\n    currentItem: o[currentIndex],\n    changeItem: setCurrentIndex\n  };\n}\n\nconst useTitle = i => {\n  const [title, setTitle] = useState(i);\n  const updateTitle = () => {\n    const htmlTitle = document.querySelector(\"title\");\n    htmlTitle.innerText = title;\n  };\n  useEffect(updateTitle, [title]);\n  return setTitle;\n\n}\n\n\nconst useClick = onClick => {\n  // if(typeof onClick !== \"function\"){\n  //   return;\n  // };\n  const element = useRef();\n  useEffect(() => {\n    if(element.current){\n      element.current.addEventListener(\"click\",onClick);\n    }\n    return () =>{\n      if(element.current){\n        element.current.removeEventListener(\"click\",onClick);\n      }\n    } \n  },[]);\n  return element;\n}\nconst useConfirm = (m = \"\",callback,cancel) => {\n  if(!callback || typeof callback !== \"function\"){\n    return;\n  }\n  if(cancel && typeof cancel !== \"function\"){\n    return;\n  }\n  const confirmAction = () => {\n    if(window.confirm(m)){\n      callback();\n    }else{\n      cancel();\n    }\n  }\n  return confirmAction;\n\n}\n\nconst usePreventLeave = () => {\n  const listener = event => {\n    event.preventDefault();\n    event.returnValue = \"\";\n  }\n  const enablePrevent = () => window.addEventListener(\"beforeunload\",listener);\n  const disablePrevent = () => window.removeEventListener(\"beforeunload\",listener);\n\n  return {enablePrevent, disablePrevent}\n\n}\n\n\nconst useBeforLeave = onBefore =>{\n  \n  const handle = (event) =>{\n    \n   \n    const {clientY} = event;\n    if(clientY <= 0){\n      return ;\n    } \n    onBefore();\n  }\n  useEffect(()=>{\n    if(typeof onBefore !== \"function\"){\n      return ;\n    }; // 조건부로 데이터를 로드해야하는 경우 useEffect 호출 안에 if문을 써야함\n    document.addEventListener(\"mouseleave\",handle);\n    return () => document.removeEventListener(\"mouseleave\",handle);\n  },[]);\n  \n}\nconst useFadeIn = (duration = 1,delay = 0) =>{\n  \nconst element = useRef();\n  useEffect(()=>{\n    if(typeof duration !== \"number\" || typeof delay !== \"number\"){\n      return;\n    }\n    if(element.current){\n      const {current} = element;\n      current.style.opacity = 1;\n      current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\n     \n    }\n  },[])\n\n  return {ref: element, style: {opacity : 0}};\n\n}\n\nconst useNetwork = netWorkOnChange => {\n  const [status, setStatus] = useState(navigator.onLine);\n  const handler = () =>{\n    if(typeof netWorkOnChange === \"function\"){\n      netWorkOnChange(navigator.onLine)\n    }\n     setStatus(navigator.onLine);\n  }\n \n  useEffect(() => {\n    window.addEventListener(\"online\",handler);\n    window.addEventListener(\"offline\",handler);\n\n    return () => {\n      window.removeEventListener(\"online\",handler);\n      window.removeEventListener(\"offline\",handler);\n    } //온라인일때 주석 풀어서 확인 필요\n    \n  },[])\n  \n  return status;\n}\n\nconst useScroll = () =>{\n  const [state, setState] = useState({x: 0, y:0})\n\n  \n  const onScroll = () =>{\n    setState({y : window.scrollY , x: window.scrollX});\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  },[])\n  return state;\n}\n\n\nconst useFullScreen = (callback) =>{\n  const element = useRef();\n  const triggerFull = () =>{\n    if(element.current){\n      element.current.requestFullscreen();\n      if(callback && typeof callback ===  \"function\"){\n        callback(true);\n      }\n    }\n    \n  }\n  const exitFull = () =>{\n    document.exitFullscreen();\n    if(callback && typeof callback ===  \"function\"){\n      callback(false);\n    }\n  };\n  return {element, triggerFull, exitFull};\n}\nconst useNotification = (title, options) =>{\n  if(!(\"Notification\" in window)){\n    return;\n  }\n  const fireNotification = () => {\n    if(Notification.permission !== \"granted\"){\n      Notification.requestPermission().then(permission => {\n        if(Notification.permission === \"granted\"){\n          new Notification(title, options);\n        }else{\n          return;\n        }\n      })\n    }else{\n      new Notification(title, options)\n    }\n  }\n  return fireNotification;\n}\n\nconst App = () =>{\n  const maxLen = value => value.length <= 10;\n  const [item,setItem] = useState(0);\n  const name = useInput(\"Mr.\", maxLen);\n\n  const Increment = () => setItem(item + 1);\n  const Decrement = () => setItem(item - 1);\n  const {currentItem,changeItem} = useTabs(0, content);\n  const titleUpDater = useTitle(\"loading...\");\n  setTimeout(()=> titleUpDater(\"home\"),5000);\n  const sayHello = () => console.log(\"say Hello\");\n  const changeElement = useClick(sayHello);\n  const Deleteing =  () => console.log(\"Deleting message....\");\n  const abort = () => console.log(\"abort\");\n  const confirmDelete = useConfirm(\"Are you sure?\",Deleteing,abort);\n  const { enablePrevent, disablePrevent } = usePreventLeave();\n  const BeforeLife =() =>{console.log(\"plz Don't leave\")} ;\n  useBeforLeave(BeforeLife);\n  const titleFadeIn = useFadeIn(2,3);\n  const descriptionFadeIn = useFadeIn(3,2);\n  const checkOnLine = useNetwork();\n  const {y} = useScroll();\n  const onFull = isFull =>{\n    console.log(isFull ? \"We are Full\" : \"We are Small\");\n  }\n  const {element,triggerFull,exitFull} = useFullScreen(onFull);\n  const triggerNotifi = useNotification(\"it's working wow\",{ body : \"And i making\"});\n  const {loading, data, refetch} = useAxios({ url: \"https://yts.mx/api/v2/list_movies.json\"});\n\n  return(\n    <div className=\"App\" style={{height:\"1000vh\"}}>\n      <h1 >{checkOnLine ? \"Online\" : \"Offline\"}</h1>\n      <h1 ref={changeElement}>{item}</h1>\n      <button onClick={Increment}>Increment</button>\n      <button onClick={Decrement}>Decrement</button>\n      <input placeholder=\"Name\" {...name} />\n      {content.map((section,index) => (\n          <button  onClick={() => changeItem(index)} >{section.tab}</button>)\n      )}\n      <div>{currentItem.content}</div>\n      <h2 ref={changeElement}>Hi</h2>\n      <button onClick={confirmDelete}>Delete message</button>\n      <div>\n        <h2>Prevent Btn</h2>\n        <button onClick={enablePrevent}>Protect</button>\n        <button onClick={disablePrevent}>Unprotect</button>\n      </div>\n      <div style={{position:\"fixed\", color: y > 100 ? \"red\" : \"#000\" }}>\n        <h2 {...titleFadeIn}>FadeIn Title</h2>\n        <p {...descriptionFadeIn}>FadeIn description</p>\n      </div>\n      <div>\n        <div ref={element}>\n        <button style={{display:'block'}} onClick={exitFull}>Eixt Full Screen</button>\n          <img  src=\"https://imgaz.staticbg.com/thumb/large/oaupload/ser1/banggood/images/A9/C4/8a9cb55d-f7f1-4c36-91bb-3ce1bcb85e37.jpg\" />\n          \n        </div>\n        <button  onClick={triggerFull}>Use Full Screen</button>\n      </div>\n      <button onClick={triggerNotifi}> Notification </button>\n\n      <div>\n      <h1>{data && data.status}</h1>\n      <h2>{loading && \"Loading\"}</h2>\n        <button onClick={refetch}>refetch</button>\n      </div>\n    </div>\n    \n    \n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}